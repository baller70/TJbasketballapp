"use strict";(()=>{var e={};e.id=717,e.ids=[717],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},84770:e=>{e.exports=require("crypto")},17702:e=>{e.exports=require("events")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},86624:e=>{e.exports=require("querystring")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},27890:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>q,patchFetch:()=>h,requestAsyncStorage:()=>l,routeModule:()=>x,serverHooks:()=>f,staticGenerationAsyncStorage:()=>m});var i={};t.r(i),t.d(i,{PATCH:()=>c,dynamic:()=>d});var o=t(79182),s=t(72007),a=t(56719),n=t(93442),u=t(15649),p=t(35970);let d="force-dynamic";async function c(e,{params:r}){try{let e=await (0,u.getServerSession)();if(!e?.user?.id)return n.NextResponse.json({error:"Unauthorized"},{status:401});if(!await p._.notification.findFirst({where:{id:r.id,userId:e.user.id}}))return n.NextResponse.json({error:"Notification not found"},{status:404});let t=await p._.notification.update({where:{id:r.id},data:{read:!0}});return n.NextResponse.json(t)}catch(e){return console.error("Error marking notification as read:",e),n.NextResponse.json({error:"Failed to mark notification as read"},{status:500})}}let x=new o.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/notifications/[id]/mark-read/route",pathname:"/api/notifications/[id]/mark-read",filename:"route",bundlePath:"app/api/notifications/[id]/mark-read/route"},resolvedPagePath:"/home/ubuntu/hoopsquest/app/app/api/notifications/[id]/mark-read/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:f}=x,q="/api/notifications/[id]/mark-read/route";function h(){return(0,a.patchFetch)({serverHooks:f,staticGenerationAsyncStorage:m})}},35970:(e,r,t)=>{t.d(r,{_:()=>o});let i=require("@prisma/client"),o=global.prisma||new i.PrismaClient}};var r=require("../../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[372,649,609],()=>t(27890));module.exports=i})();