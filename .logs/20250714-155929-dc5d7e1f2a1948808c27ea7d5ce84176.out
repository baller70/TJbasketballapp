app/api/ai/drill-recommendation/route.ts(131,70): error TS2304: Cannot find name 'userId'.
app/api/auth/[...nextauth]/route.ts(19,13): error TS2322: Type '(credentials: Record<"email" | "password", string> | undefined) => Promise<{ id: string; email: string; name: string; role: UserRole; parentId: string | null; playerProfile: { ...; } | null; children: { ...; }[]; parent: { ...; } | null; } | null>' is not assignable to type '(credentials: Record<"email" | "password", string> | undefined, req: Pick<RequestInternal, "query" | "method" | "body" | "headers">) => Awaitable<...>'.
  Type 'Promise<{ id: string; email: string; name: string; role: UserRole; parentId: string | null; playerProfile: { id: string; userId: string; createdAt: Date; updatedAt: Date; skillLevel: string; ... 8 more ...; preferences: JsonValue; } | null; children: { ...; }[]; parent: { ...; } | null; } | null>' is not assignable to type 'Awaitable<User | null>'.
    Type 'Promise<{ id: string; email: string; name: string; role: UserRole; parentId: string | null; playerProfile: { id: string; userId: string; createdAt: Date; updatedAt: Date; skillLevel: string; ... 8 more ...; preferences: JsonValue; } | null; children: { ...; }[]; parent: { ...; } | null; } | null>' is not assignable to type 'PromiseLike<User | null>'.
      Types of property 'then' are incompatible.
        Type '<TResult1 = { id: string; email: string; name: string; role: UserRole; parentId: string | null; playerProfile: { id: string; userId: string; createdAt: Date; updatedAt: Date; ... 9 more ...; preferences: JsonValue; } | null; children: { ...; }[]; parent: { ...; } | null; } | null, TResult2 = never>(onfulfilled?: ((v...' is not assignable to type '<TResult1 = User | null, TResult2 = never>(onfulfilled?: ((value: User | null) => TResult1 | PromiseLike<TResult1>) | null | undefined, onrejected?: ((reason: any) => TResult2 | PromiseLike<...>) | null | undefined) => PromiseLike<...>'.
          Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.
            Types of parameters 'value' and 'value' are incompatible.
              Type '{ id: string; email: string; name: string; role: UserRole; parentId: string | null; playerProfile: { id: string; userId: string; createdAt: Date; updatedAt: Date; skillLevel: string; ... 8 more ...; preferences: JsonValue; } | null; children: { ...; }[]; parent: { ...; } | null; } | null' is not assignable to type 'User | null'.
                Type '{ id: string; email: string; name: string; role: $Enums.UserRole; parentId: string | null; playerProfile: { id: string; userId: string; createdAt: Date; updatedAt: Date; ... 9 more ...; preferences: JsonValue; } | null; children: { ...; }[]; parent: { ...; } | null; }' is not assignable to type 'User'.
                  Types of property 'parentId' are incompatible.
                    Type 'string | null' is not assignable to type 'string | undefined'.
                      Type 'null' is not assignable to type 'string | undefined'.
exit_code=2
